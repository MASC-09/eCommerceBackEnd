DROP TABLE IF EXISTS CARTS;
DROP TABLE IF EXISTS USER_PURCHASE_HISTORY;
DROP TABLE IF EXISTS USERS_LIBRARY;
DROP TABLE IF EXISTS REVIEWS;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS GAMES;
DROP TABLE IF EXISTS USERS;


CREATE TABLE USERS (
  userID INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  password TEXT NOT NULL,
  email TEXT UNIQUE NOT NULL,
  address TEXT NOT NULL
);


CREATE TABLE GENRES (
  genreID INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL
);

CREATE TABLE GAMES (
  gameID INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  description TEXT NOT NULL,
  price REAL NOT NULL,
  image TEXT NOT NULL,
  genre INTEGER NOT NULL,
  FOREIGN KEY (genre) REFERENCES GENRES (genreID)

--   created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
);

CREATE TABLE USER_PURCHASE_HISTORY (
  purchaseID INTEGER PRIMARY KEY AUTOINCREMENT,
  userID INTEGER NOT NULL,
  gameID INTEGER NOT NULL,
  purchase_date TEXT NOT NULL,
  total_price REAL NOT NULL,
  FOREIGN KEY (userID) REFERENCES USERS (userID),
  FOREIGN KEY (gameID) REFERENCES GAMES (gameID)
);

CREATE TABLE CARTS (
  cartID INTEGER PRIMARY KEY AUTOINCREMENT,
  userID INTEGER NOT NULL,
  gameID INTEGER NOT NULL,
  quantity INTEGER NOT NULL,
  total_price REAL NOT NULL,
  FOREIGN KEY (userID) REFERENCES USERS (userID),
  FOREIGN KEY (gameID) REFERENCES GAMES (gameID)
);

CREATE TABLE USERS_LIBRARY (
  userID INTEGER NOT NULL,
  gameID INTEGER NOT NULL,
  purchase_date TEXT NOT NULL,
  download_link TEXT NOT NULL,
  FOREIGN KEY (userID) REFERENCES USERS (userID),
  FOREIGN KEY (gameID) REFERENCES GAMES (gameID),
  PRIMARY KEY (userID, gameID)
);

CREATE TABLE REVIEWS (
  reviewID INTEGER PRIMARY KEY NOT NULL,
  userID INTEGER NOT NULL,
  gameID INTEGER NOT NULL,
  rating INTEGER NOT NULL,
  description TEXT NOT NULL,
  FOREIGN KEY (userID) REFERENCES USERS (userID),
  FOREIGN KEY (gameID) REFERENCES GAMES (gameID)
);

